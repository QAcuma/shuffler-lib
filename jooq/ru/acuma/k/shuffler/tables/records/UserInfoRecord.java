/*
 * This file is generated by jOOQ.
 */
package ru.acuma.k.shuffler.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;

import ru.acuma.k.shuffler.tables.UserInfo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoRecord extends UpdatableRecordImpl<UserInfoRecord> implements Record14<Long, String, Boolean, String, String, String, Boolean, Boolean, Boolean, Boolean, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_info.telegram_id</code>.
     */
    public UserInfoRecord setTelegramId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.telegram_id</code>.
     */
    public Long getTelegramId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_info.language_code</code>.
     */
    public UserInfoRecord setLanguageCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.language_code</code>.
     */
    public String getLanguageCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_info.is_bot</code>.
     */
    public UserInfoRecord setIsBot(Boolean value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.is_bot</code>.
     */
    public Boolean getIsBot() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>public.user_info.first_name</code>.
     */
    public UserInfoRecord setFirstName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.user_info.last_name</code>.
     */
    public UserInfoRecord setLastName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.last_name</code>.
     */
    public String getLastName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user_info.user_name</code>.
     */
    public UserInfoRecord setUserName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.user_name</code>.
     */
    public String getUserName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.user_info.is_blocked</code>.
     */
    public UserInfoRecord setIsBlocked(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.is_blocked</code>.
     */
    public Boolean getIsBlocked() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.user_info.can_join_groups</code>.
     */
    public UserInfoRecord setCanJoinGroups(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.can_join_groups</code>.
     */
    public Boolean getCanJoinGroups() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.user_info.can_read_all_group_message</code>.
     */
    public UserInfoRecord setCanReadAllGroupMessage(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.can_read_all_group_message</code>.
     */
    public Boolean getCanReadAllGroupMessage() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.user_info.support_inline_queries</code>.
     */
    public UserInfoRecord setSupportInlineQueries(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.support_inline_queries</code>.
     */
    public Boolean getSupportInlineQueries() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.user_info.last_message_at</code>.
     */
    public UserInfoRecord setLastMessageAt(OffsetDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.last_message_at</code>.
     */
    public OffsetDateTime getLastMessageAt() {
        return (OffsetDateTime) get(10);
    }

    /**
     * Setter for <code>public.user_info.created_at</code>.
     */
    public UserInfoRecord setCreatedAt(OffsetDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(11);
    }

    /**
     * Setter for <code>public.user_info.updated_at</code>.
     */
    public UserInfoRecord setUpdatedAt(OffsetDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(12);
    }

    /**
     * Setter for <code>public.user_info.deleted_at</code>.
     */
    public UserInfoRecord setDeletedAt(OffsetDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.user_info.deleted_at</code>.
     */
    public OffsetDateTime getDeletedAt() {
        return (OffsetDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, Boolean, String, String, String, Boolean, Boolean, Boolean, Boolean, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, Boolean, String, String, String, Boolean, Boolean, Boolean, Boolean, OffsetDateTime, OffsetDateTime, OffsetDateTime, OffsetDateTime> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserInfo.USER_INFO.TELEGRAM_ID;
    }

    @Override
    public Field<String> field2() {
        return UserInfo.USER_INFO.LANGUAGE_CODE;
    }

    @Override
    public Field<Boolean> field3() {
        return UserInfo.USER_INFO.IS_BOT;
    }

    @Override
    public Field<String> field4() {
        return UserInfo.USER_INFO.FIRST_NAME;
    }

    @Override
    public Field<String> field5() {
        return UserInfo.USER_INFO.LAST_NAME;
    }

    @Override
    public Field<String> field6() {
        return UserInfo.USER_INFO.USER_NAME;
    }

    @Override
    public Field<Boolean> field7() {
        return UserInfo.USER_INFO.IS_BLOCKED;
    }

    @Override
    public Field<Boolean> field8() {
        return UserInfo.USER_INFO.CAN_JOIN_GROUPS;
    }

    @Override
    public Field<Boolean> field9() {
        return UserInfo.USER_INFO.CAN_READ_ALL_GROUP_MESSAGE;
    }

    @Override
    public Field<Boolean> field10() {
        return UserInfo.USER_INFO.SUPPORT_INLINE_QUERIES;
    }

    @Override
    public Field<OffsetDateTime> field11() {
        return UserInfo.USER_INFO.LAST_MESSAGE_AT;
    }

    @Override
    public Field<OffsetDateTime> field12() {
        return UserInfo.USER_INFO.CREATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field13() {
        return UserInfo.USER_INFO.UPDATED_AT;
    }

    @Override
    public Field<OffsetDateTime> field14() {
        return UserInfo.USER_INFO.DELETED_AT;
    }

    @Override
    public Long component1() {
        return getTelegramId();
    }

    @Override
    public String component2() {
        return getLanguageCode();
    }

    @Override
    public Boolean component3() {
        return getIsBot();
    }

    @Override
    public String component4() {
        return getFirstName();
    }

    @Override
    public String component5() {
        return getLastName();
    }

    @Override
    public String component6() {
        return getUserName();
    }

    @Override
    public Boolean component7() {
        return getIsBlocked();
    }

    @Override
    public Boolean component8() {
        return getCanJoinGroups();
    }

    @Override
    public Boolean component9() {
        return getCanReadAllGroupMessage();
    }

    @Override
    public Boolean component10() {
        return getSupportInlineQueries();
    }

    @Override
    public OffsetDateTime component11() {
        return getLastMessageAt();
    }

    @Override
    public OffsetDateTime component12() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime component13() {
        return getUpdatedAt();
    }

    @Override
    public OffsetDateTime component14() {
        return getDeletedAt();
    }

    @Override
    public Long value1() {
        return getTelegramId();
    }

    @Override
    public String value2() {
        return getLanguageCode();
    }

    @Override
    public Boolean value3() {
        return getIsBot();
    }

    @Override
    public String value4() {
        return getFirstName();
    }

    @Override
    public String value5() {
        return getLastName();
    }

    @Override
    public String value6() {
        return getUserName();
    }

    @Override
    public Boolean value7() {
        return getIsBlocked();
    }

    @Override
    public Boolean value8() {
        return getCanJoinGroups();
    }

    @Override
    public Boolean value9() {
        return getCanReadAllGroupMessage();
    }

    @Override
    public Boolean value10() {
        return getSupportInlineQueries();
    }

    @Override
    public OffsetDateTime value11() {
        return getLastMessageAt();
    }

    @Override
    public OffsetDateTime value12() {
        return getCreatedAt();
    }

    @Override
    public OffsetDateTime value13() {
        return getUpdatedAt();
    }

    @Override
    public OffsetDateTime value14() {
        return getDeletedAt();
    }

    @Override
    public UserInfoRecord value1(Long value) {
        setTelegramId(value);
        return this;
    }

    @Override
    public UserInfoRecord value2(String value) {
        setLanguageCode(value);
        return this;
    }

    @Override
    public UserInfoRecord value3(Boolean value) {
        setIsBot(value);
        return this;
    }

    @Override
    public UserInfoRecord value4(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserInfoRecord value5(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserInfoRecord value6(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserInfoRecord value7(Boolean value) {
        setIsBlocked(value);
        return this;
    }

    @Override
    public UserInfoRecord value8(Boolean value) {
        setCanJoinGroups(value);
        return this;
    }

    @Override
    public UserInfoRecord value9(Boolean value) {
        setCanReadAllGroupMessage(value);
        return this;
    }

    @Override
    public UserInfoRecord value10(Boolean value) {
        setSupportInlineQueries(value);
        return this;
    }

    @Override
    public UserInfoRecord value11(OffsetDateTime value) {
        setLastMessageAt(value);
        return this;
    }

    @Override
    public UserInfoRecord value12(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserInfoRecord value13(OffsetDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UserInfoRecord value14(OffsetDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public UserInfoRecord values(Long value1, String value2, Boolean value3, String value4, String value5, String value6, Boolean value7, Boolean value8, Boolean value9, Boolean value10, OffsetDateTime value11, OffsetDateTime value12, OffsetDateTime value13, OffsetDateTime value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserInfoRecord
     */
    public UserInfoRecord() {
        super(UserInfo.USER_INFO);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(Long telegramId, String languageCode, Boolean isBot, String firstName, String lastName, String userName, Boolean isBlocked, Boolean canJoinGroups, Boolean canReadAllGroupMessage, Boolean supportInlineQueries, OffsetDateTime lastMessageAt, OffsetDateTime createdAt, OffsetDateTime updatedAt, OffsetDateTime deletedAt) {
        super(UserInfo.USER_INFO);

        setTelegramId(telegramId);
        setLanguageCode(languageCode);
        setIsBot(isBot);
        setFirstName(firstName);
        setLastName(lastName);
        setUserName(userName);
        setIsBlocked(isBlocked);
        setCanJoinGroups(canJoinGroups);
        setCanReadAllGroupMessage(canReadAllGroupMessage);
        setSupportInlineQueries(supportInlineQueries);
        setLastMessageAt(lastMessageAt);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDeletedAt(deletedAt);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(ru.acuma.k.shuffler.tables.pojos.UserInfo value) {
        super(UserInfo.USER_INFO);

        if (value != null) {
            setTelegramId(value.getTelegramId());
            setLanguageCode(value.getLanguageCode());
            setIsBot(value.getIsBot());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setUserName(value.getUserName());
            setIsBlocked(value.getIsBlocked());
            setCanJoinGroups(value.getCanJoinGroups());
            setCanReadAllGroupMessage(value.getCanReadAllGroupMessage());
            setSupportInlineQueries(value.getSupportInlineQueries());
            setLastMessageAt(value.getLastMessageAt());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setDeletedAt(value.getDeletedAt());
        }
    }
}
