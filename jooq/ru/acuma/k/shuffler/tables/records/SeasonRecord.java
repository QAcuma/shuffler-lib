/*
 * This file is generated by jOOQ.
 */
package ru.acuma.k.shuffler.tables.records;


import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.acuma.k.shuffler.tables.Season;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SeasonRecord extends UpdatableRecordImpl<SeasonRecord> implements Record4<Long, OffsetDateTime, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.season.id</code>.
     */
    public SeasonRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.season.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.season.started_at</code>.
     */
    public SeasonRecord setStartedAt(OffsetDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.season.started_at</code>.
     */
    public OffsetDateTime getStartedAt() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>public.season.finished_at</code>.
     */
    public SeasonRecord setFinishedAt(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.season.finished_at</code>.
     */
    public OffsetDateTime getFinishedAt() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.season.name</code>.
     */
    public SeasonRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.season.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, OffsetDateTime, OffsetDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, OffsetDateTime, OffsetDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Season.SEASON.ID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return Season.SEASON.STARTED_AT;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return Season.SEASON.FINISHED_AT;
    }

    @Override
    public Field<String> field4() {
        return Season.SEASON.NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public OffsetDateTime component2() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime component3() {
        return getFinishedAt();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public OffsetDateTime value2() {
        return getStartedAt();
    }

    @Override
    public OffsetDateTime value3() {
        return getFinishedAt();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public SeasonRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SeasonRecord value2(OffsetDateTime value) {
        setStartedAt(value);
        return this;
    }

    @Override
    public SeasonRecord value3(OffsetDateTime value) {
        setFinishedAt(value);
        return this;
    }

    @Override
    public SeasonRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public SeasonRecord values(Long value1, OffsetDateTime value2, OffsetDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SeasonRecord
     */
    public SeasonRecord() {
        super(Season.SEASON);
    }

    /**
     * Create a detached, initialised SeasonRecord
     */
    public SeasonRecord(Long id, OffsetDateTime startedAt, OffsetDateTime finishedAt, String name) {
        super(Season.SEASON);

        setId(id);
        setStartedAt(startedAt);
        setFinishedAt(finishedAt);
        setName(name);
    }

    /**
     * Create a detached, initialised SeasonRecord
     */
    public SeasonRecord(ru.acuma.k.shuffler.tables.pojos.Season value) {
        super(Season.SEASON);

        if (value != null) {
            setId(value.getId());
            setStartedAt(value.getStartedAt());
            setFinishedAt(value.getFinishedAt());
            setName(value.getName());
        }
    }
}
