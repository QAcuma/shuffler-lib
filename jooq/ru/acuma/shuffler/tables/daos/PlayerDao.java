/*
 * This file is generated by jOOQ.
 */
package ru.acuma.shuffler.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ru.acuma.shuffler.tables.Player;
import ru.acuma.shuffler.tables.records.PlayerRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class PlayerDao extends DAOImpl<PlayerRecord, ru.acuma.shuffler.tables.pojos.Player, Long> {

    /**
     * Create a new PlayerDao without any configuration
     */
    public PlayerDao() {
        super(Player.PLAYER, ru.acuma.shuffler.tables.pojos.Player.class);
    }

    /**
     * Create a new PlayerDao with an attached configuration
     */
    @Autowired
    public PlayerDao(Configuration configuration) {
        super(Player.PLAYER, ru.acuma.shuffler.tables.pojos.Player.class, configuration);
    }

    @Override
    public Long getId(ru.acuma.shuffler.tables.pojos.Player object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Player.PLAYER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchById(Long... values) {
        return fetch(Player.PLAYER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.acuma.shuffler.tables.pojos.Player fetchOneById(Long value) {
        return fetchOne(Player.PLAYER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ru.acuma.shuffler.tables.pojos.Player> fetchOptionalById(Long value) {
        return fetchOptional(Player.PLAYER.ID, value);
    }

    /**
     * Fetch records that have <code>chat_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchRangeOfChatId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Player.PLAYER.CHAT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>chat_id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchByChatId(Long... values) {
        return fetch(Player.PLAYER.CHAT_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Player.PLAYER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.Player> fetchByUserId(Long... values) {
        return fetch(Player.PLAYER.USER_ID, values);
    }
}
