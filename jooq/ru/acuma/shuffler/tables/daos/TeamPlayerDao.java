/*
 * This file is generated by jOOQ.
 */
package ru.acuma.shuffler.tables.daos;


import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ru.acuma.shuffler.tables.TeamPlayer;
import ru.acuma.shuffler.tables.records.TeamPlayerRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TeamPlayerDao extends DAOImpl<TeamPlayerRecord, ru.acuma.shuffler.tables.pojos.TeamPlayer, Long> {

    /**
     * Create a new TeamPlayerDao without any configuration
     */
    public TeamPlayerDao() {
        super(TeamPlayer.TEAM_PLAYER, ru.acuma.shuffler.tables.pojos.TeamPlayer.class);
    }

    /**
     * Create a new TeamPlayerDao with an attached configuration
     */
    @Autowired
    public TeamPlayerDao(Configuration configuration) {
        super(TeamPlayer.TEAM_PLAYER, ru.acuma.shuffler.tables.pojos.TeamPlayer.class, configuration);
    }

    @Override
    public Long getId(ru.acuma.shuffler.tables.pojos.TeamPlayer object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TeamPlayer.TEAM_PLAYER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchById(Long... values) {
        return fetch(TeamPlayer.TEAM_PLAYER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ru.acuma.shuffler.tables.pojos.TeamPlayer fetchOneById(Long value) {
        return fetchOne(TeamPlayer.TEAM_PLAYER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchOptionalById(Long value) {
        return fetchOptional(TeamPlayer.TEAM_PLAYER.ID, value);
    }

    /**
     * Fetch records that have <code>player_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchRangeOfPlayerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TeamPlayer.TEAM_PLAYER.PLAYER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>player_id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchByPlayerId(Long... values) {
        return fetch(TeamPlayer.TEAM_PLAYER.PLAYER_ID, values);
    }

    /**
     * Fetch records that have <code>team_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchRangeOfTeamId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TeamPlayer.TEAM_PLAYER.TEAM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>team_id IN (values)</code>
     */
    public List<ru.acuma.shuffler.tables.pojos.TeamPlayer> fetchByTeamId(Long... values) {
        return fetch(TeamPlayer.TEAM_PLAYER.TEAM_ID, values);
    }
}
